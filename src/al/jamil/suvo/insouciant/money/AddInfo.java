package al.jamil.suvo.insouciant.money;

import java.util.Date;

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Suvo
 */
public class AddInfo extends javax.swing.JFrame {

    /**
     * Creates new form addMoney
     */
    public AddInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        name = new javax.swing.JLabel();
        type = new javax.swing.JLabel();
        source = new javax.swing.JTextField();
        sourceInfo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        amountInfo = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        today = new javax.swing.JRadioButton();
        manual = new javax.swing.JRadioButton();
        month = new javax.swing.JComboBox();
        day = new javax.swing.JComboBox();
        year = new javax.swing.JComboBox();
        check=new javax.swing.JCheckBox();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        name.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        name.setText("Add Money/Consume");

        type.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        type.setText("Money/Consume Source");

        source.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        source.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceActionPerformed(evt);
            }
        });

        sourceInfo.setText("info");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Amount of Money");

        amount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        amountInfo.setText("info");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jLabel6.setText("Date");

        date.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        date.setText("January 31,2015");
        date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateActionPerformed(evt);
            }
        });

        jLabel7.setText("insouciant");

        today.setText("Today");
        today.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayActionPerformed(evt);
            }
        });

        manual.setText("Menual");
        manual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manualActionPerformed(evt);
            }
        });
        month.setModel(new javax.swing.DefaultComboBoxModel(MainClass.MonthName));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });
        Object []d=new Object[31];
        for (int i=0;i<31;i++){
        	d[i]=i+1;
        }
        day.setModel(new javax.swing.DefaultComboBoxModel(d));
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });
        for (int i=0;i<31;i++){
        	d[i]=i+2013;
        }
        year.setModel(new javax.swing.DefaultComboBoxModel(d));
        
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });
        check.setText("Add to Credit");
        this.setTitle("Information Addtion");
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                	.addComponent(check)
                    .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name)
                    .addComponent(type)
                    .addComponent(jLabel4)
                    .addComponent(sourceInfo)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountInfo))
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(today)
                                .addGap(18, 18, 18)
                                .addComponent(manual)
                                .addGap(18, 18, 18)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                
                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(name)
                .addGap(39, 39, 39)
                .addComponent(type)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(source, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sourceInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountInfo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(today)
                    
                    .addComponent(manual)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(cancel))
                .addGap(9, 9, 9)
                .addComponent(jLabel7)
                .addContainerGap())
        );
        

        pack();
    }// </editor-fold>                        
    public  void makeVisible(){
    	this.setVisible(true);
    }

    private void sourceActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void dateActionPerformed(java.awt.event.ActionEvent evt) {                                            
        
    }                                           

    private void saveActionPerformed(java.awt.event.ActionEvent evt) { 
    	String str;
    	String n;
    	double a;
    	String d;
    	str=source.getText();
    	if (str.equals("")){
    		JOptionPane.showMessageDialog(this, "Source Field is empty","Error",JOptionPane.ERROR_MESSAGE);
    		return;
    	}
    	n=str;
    	str=amount.getText();
    	if (str.equals("")){
    		JOptionPane.showMessageDialog(this, "Amount Field is empty","Error",JOptionPane.ERROR_MESSAGE);
    		return;
    	}
    	try{
    		a=Double.parseDouble(str);
    	} catch(Exception e){
    		JOptionPane.showMessageDialog(this, "Error Value of amount","Error",JOptionPane.ERROR_MESSAGE);
    		return;
    	}
    	d=date.getText();
        switch(dataType){
        case 1:
        {
        	AddData data=new AddData();
        	data.source=n;
        	data.amount=a;
        	data.date=d;
        	MainClass.addData.add(data);
        	MainClass.amount+=a;
        	String []m1=d.split(",");
        	String []m2=d.split(" ");
        	String mon=m2[0]+" "+m1[1];

        	boolean flag=true;
        	for (int i=0;i<MainClass.months.size();i++){
        		if (mon.equals(MainClass.months.get(i))) flag=false;
        		System.out.println(mon);
        	}
        	if (flag) MainClass.months.add(mon);
        	DataSave.balanceSave();
        	DataSave.AddInfoSave();
        	DataSave.MonthInfoSave();
        	MainClass.mainMenu.setUp();
        	MainClass.mainMenu.setEnabled(true);
        	this.setVisible(false);
        	
        	break;
        }
        case 2:
        {
        	ConsumeData data=new ConsumeData();
        	data.source=n;
        	data.amount=a;
        	data.date=d;
        	MainClass.consumeData.add(data);
        	MainClass.amount-=a;
        	String []m1=d.split(",");
        	String []m2=d.split(" ");
        	String mon=m2[0]+" "+m1[1];

        	boolean flag=true;
        	for (int i=0;i<MainClass.months.size();i++){
        		if (mon.equals(MainClass.months.get(i))) flag=false;
        		System.out.println(mon);
        	}
        	if (flag) MainClass.months.add(mon);
        	DataSave.balanceSave();
        	DataSave.ConsumeInfoSave();
        	DataSave.MonthInfoSave();
        	MainClass.mainMenu.setUp();
        	MainClass.mainMenu.setEnabled(true);
        	this.setVisible(false);
        	break;
        }	
        case 3:
        {
        	TakenLoanData data=new TakenLoanData();
        	data.person=n;
        	data.amount=a;
        	data.date=d;
        	data.cleared=0;
        	data.status="pending";
        	MainClass.takenLoanData.add(data);
        	if (check.isSelected())MainClass.amount+=a;
        	MainClass.loan+=a;
        	String []m1=d.split(",");
        	String []m2=d.split(" ");
        	String mon=m2[0]+" "+m1[1];

        	boolean flag=true;
        	for (int i=0;i<MainClass.months.size();i++){
        		if (mon.equals(MainClass.months.get(i))) flag=false;
        		System.out.println(mon);
        	}
        	if (flag) MainClass.months.add(mon);
        	DataSave.balanceSave();
        	DataSave.TakenLoanInfoSave();
        	DataSave.MonthInfoSave();
        	MainClass.mainMenu.setUp();
        	MainClass.mainMenu.setEnabled(true);
        	this.setVisible(false);
        	break;
        }
        case 4:
        {
        	GivenLoanData data=new GivenLoanData();
        	data.person=n;
        	data.amount=a;
        	data.date=d;
        	data.cleared=0;
        	data.status="pending";
        	MainClass.donate+=a;
        	MainClass.givenLoanData.add(data);
        	if (check.isSelected())MainClass.amount-=a;
        	String []m1=d.split(",");
        	String []m2=d.split(" ");
        	String mon=m2[0]+" "+m1[1];
        	
        	boolean flag=true;
        	for (int i=0;i<MainClass.months.size();i++){
        		if (mon.equals(MainClass.months.get(i))) flag=false;
        		System.out.println(mon);
        	}
        	if (flag) MainClass.months.add(mon);
        	DataSave.balanceSave();
        	DataSave.GivenLoanInfoSave();
        	DataSave.MonthInfoSave();
        	MainClass.mainMenu.setUp();
        	MainClass.mainMenu.setEnabled(true);
        	this.setVisible(false);
        	break;
        }
        }
    }                                        

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {   
    	MainClass.mainMenu.setEnabled(true);
    	MainClass.mainMenu.setUp();
    	this.setVisible(false);
    	
    }                                        

    private void todayActionPerformed(java.awt.event.ActionEvent evt) {                                              
        manual.setSelected(false);
        month.setVisible(false);
    	day.setVisible(false);
    	year.setVisible(false);
    	Date d=new Date();
    	date.setText(MainClass.MonthName[d.getMonth()]+" "+d.getDate()+","+(d.getYear()+1900));
    }                                             

    private void manualActionPerformed(java.awt.event.ActionEvent evt) {                                              
        today.setSelected(false);
        month.setVisible(true);
    	day.setVisible(true);
    	year.setVisible(true);
    	Date d=new Date();
    	month.setSelectedItem(MainClass.MonthName[d.getMonth()]);
    	day.setSelectedItem(d.getDate());
    	year.setSelectedItem((d.getYear()+1900));
    }                                             

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {                                           
        date.setText(month.getSelectedItem().toString()+" "+day.getSelectedItem().toString()+","+year.getSelectedItem());
    }                                          

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {                                           
    	date.setText(month.getSelectedItem().toString()+" "+day.getSelectedItem().toString()+","+year.getSelectedItem());
    }                                          

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {                                            
    	date.setText(month.getSelectedItem().toString()+" "+day.getSelectedItem().toString()+","+year.getSelectedItem());
    }
    
    
    @SuppressWarnings({ "unchecked", "rawtypes" })
	public void setUp(int t){
    	dataType=t;
    	switch(t){
    	case 1:
    		name.setText("Add Money Source");
    		type.setText("Source");
    		sourceInfo.setText("Give the source of money");
    		check.setVisible(false);
    		break;
    	case 2:
    		name.setText("Consume Money");
    		type.setText("Source");
    		sourceInfo.setText("Give the reason for consumming");
    		check.setVisible(false);
    		break;
    	case 3:
    		name.setText("Getting Loan");
    		type.setText("Person");
    		sourceInfo.setText("Person who gave you loan and why");
    		check.setVisible(true);
    		check.setText("Add to Balance");
    		break;
    	case 4:
    		name.setText("Giving Loan");
    		type.setText("Person");
    		sourceInfo.setText("Person whom you gave loan");
    		check.setVisible(true);
    		check.setText("Decrease to balance");
    		break;
    	}
    	source.setText("");
    	amount.setText("");
    	amountInfo.setText("Amount of money");
    	today.setSelected(true);
    	manual.setSelected(false);
    	Date d=new Date();
    	date.setEditable(false);
    	date.setText(MainClass.MonthName[d.getMonth()]+" "+d.getDate()+","+(d.getYear()+1900));
    	month.setVisible(false);
    	day.setVisible(false);
    	year.setVisible(false);
    }

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify                     
    private javax.swing.JButton save;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox month;
    private javax.swing.JComboBox day;
    private javax.swing.JLabel name;
    private javax.swing.JLabel type;
    private javax.swing.JLabel sourceInfo;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel amountInfo;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JRadioButton today;
    private javax.swing.JRadioButton manual;
    private javax.swing.JTextField source;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField date;
    private javax.swing.JComboBox year;
    private javax.swing.JCheckBox check;
    private int dataType;
    // End of variables declaration                   
}
